@model PagedList.IPagedList<PrinterTonerEPCwithAuthentication.Models.ToDo> 
@using PagedList.Mvc; 
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@*@model IEnumerable<PrinterTonerEPCwithAuthentication.Models.ToDo>*@

@{
    ViewBag.Title = "Index";
}

<h2>Zadaci</h2>

<p>
    @Html.ActionLink("Unesi novi", "Create")
</p>

@*@using (Html.BeginForm())
{ <p> Unesi nadimak radnika: @Html.TextBox("searchStringNick") <input type="submit" value="Search" /></p> }*@

<style>
    .col1 { width: 110px; }

    .col2 { width: 140px; }
</style>


@using (Html.BeginForm("Index", "ToDo", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("searchStringNick", ViewBag.CurrentFilter as string) <input type="submit" value="Search" />
    </p>
}


<table class="table">
    <tr>
        <th> @Html.ActionLink("Radnik", "Index", new { sortOrder = ViewBag.NickSortParm }) </th>
        @*<th>
            Radnik
        </th>*@
        <th>
            Opis posla
        </th>
        <th>
            Datum završetka
        </th>
        <th>
            Spreman
        </th>
        <th class="col2">
            @Html.ActionLink("Kreirano", "Index", new { sortOrder = ViewBag.CreatedSortParm })
            @*Kreirano*@
        </th>
        <th class="col1"></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ApplicationUser.Nick)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Closed))
            @*@Html.DisplayFor(modelItem => item.Closed)*@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsReady)
        </td>
        <td>
            @Convert.ToString(string.Format("{0:dd/MM/yyyy HH:mm}", item.Created))
            @*@Html.DisplayFor(modelItem => item.Created)*@
        </td>
        <td>
            @Html.ActionLink("Izmeni", "Edit", new { id=item.ToDoID }) |  
            @Html.ActionLink("Izbriši", "Delete", new { id=item.ToDoID })
        </td>
    </tr>
}

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))